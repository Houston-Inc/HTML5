var sechash = require('sechash'),
    check = require('validator').check,
    sanitize  = require('validator').sanitize,
    step = require('step');

var salt = 'hseh#23a4!';

module.exports.create = function(dep) {
    return function(app){
        app.post('/login', function(req, res, next) {
            var credentials = req.body;
            step(
                function() {
                    dep.db.collection('users').findByEmail(credentials.email, this);
                },
                function(err, user) {
                    if (err || !user) {res.validationError({email: 'validation failed'}); return;}
                    this.user = user;
                    sechash.testHash(credentials.password, user.password, this);
                },
                function(err, match) {
                    if (err || !match) {res.validationError({password: 'validation failed'}); return;}
                    req.session.user = {name: this.user.name, id: this.user._id};
                    res.json({message: 'Login success', userName: this.user.name});
                }
            );
        });

        app.get('/logout', function(req, res, next) {
            req.session.user = this.user;
            res.ok({message: 'Logout success'});
        });

        app.get('/currentUser', function(req, res, next) {
            if (req.session.user) res.ok(req.session.user);
            else res.notFound({message: 'No current user'});
        });

        app.post('/register', function(req, res, next) {
            var registration = req.body;
            try {
                check(registration.name, 'name').notEmpty().len(3,50);
                check(registration.email, 'email').len(6, 64).isEmail();
                check(registration.password, 'password').notEmpty().len(4);
                check(registration.passwordRepeat, 'passwordRepeat').equals(registration.password);
            } catch(e) {
                var error = {};
                error[e.message] = 'validation failed';
                res.validationError(error); return;
            }
            registration.admin = false;
            delete registration.passwordRepeat;
            registration.password = sechash.strongHashSync('md5',registration.password, salt, 2000);
            dep.db.collection('users').save(registration);
            req.session.user = registration;
            res.ok({name: registration.name});
        });

        app.post('/forgotPassword', function(req, res, next) {
            res.send(200, {message: 'ok'});
        });

        app.get('/activate', function(req, res, next) {
            res.send(200, {message: 'ok'});
        });
    };
};

